package repack.org.bouncycastle.crypto.engines;

import androidx.core.view.MotionEventCompat;
import androidx.core.view.ViewCompat;
import com.google.common.base.Ascii;
import java.util.Hashtable;
import repack.org.bouncycastle.crypto.BlockCipher;
import repack.org.bouncycastle.crypto.CipherParameters;
import repack.org.bouncycastle.crypto.DataLengthException;
import repack.org.bouncycastle.crypto.params.KeyParameter;
import repack.org.bouncycastle.crypto.params.ParametersWithSBox;
import repack.org.bouncycastle.util.Arrays;
import repack.org.bouncycastle.util.Strings;

public class GOST28147Engine implements BlockCipher {
    protected static final int BLOCK_SIZE = 8;
    private static byte[] DSbox_A;
    private static byte[] DSbox_Test;
    private static byte[] ESbox_A;
    private static byte[] ESbox_B;
    private static byte[] ESbox_C;
    private static byte[] ESbox_D;
    private static byte[] ESbox_Test;
    private static byte[] Sbox_Default;
    private static Hashtable sBoxes = new Hashtable();

    /* renamed from: S */
    private byte[] f6092S = Sbox_Default;
    private boolean forEncryption;
    private int[] workingKey = null;

    public String getAlgorithmName() {
        return "GOST28147";
    }

    public int getBlockSize() {
        return 8;
    }

    public void reset() {
    }

    static {
        byte[] bArr = new byte[128];
        bArr[0] = 4;
        bArr[1] = 10;
        bArr[2] = 9;
        bArr[3] = 2;
        bArr[4] = 13;
        bArr[5] = 8;
        bArr[7] = 14;
        bArr[8] = 6;
        bArr[9] = 11;
        bArr[10] = 1;
        bArr[11] = 12;
        bArr[12] = 7;
        bArr[13] = 15;
        bArr[14] = 5;
        bArr[15] = 3;
        bArr[16] = 14;
        bArr[17] = 11;
        bArr[18] = 4;
        bArr[19] = 12;
        bArr[20] = 6;
        bArr[21] = 13;
        bArr[22] = 15;
        bArr[23] = 10;
        bArr[24] = 2;
        bArr[25] = 3;
        bArr[26] = 8;
        bArr[27] = 1;
        bArr[29] = 7;
        bArr[30] = 5;
        bArr[31] = 9;
        bArr[32] = 5;
        bArr[33] = 8;
        bArr[34] = 1;
        bArr[35] = 13;
        bArr[36] = 10;
        bArr[37] = 3;
        bArr[38] = 4;
        bArr[39] = 2;
        bArr[40] = 14;
        bArr[41] = 15;
        bArr[42] = 12;
        bArr[43] = 7;
        bArr[44] = 6;
        bArr[46] = 9;
        bArr[47] = 11;
        bArr[48] = 7;
        bArr[49] = 13;
        bArr[50] = 10;
        bArr[51] = 1;
        bArr[53] = 8;
        bArr[54] = 9;
        bArr[55] = 15;
        bArr[56] = 14;
        bArr[57] = 4;
        bArr[58] = 6;
        bArr[59] = 12;
        bArr[60] = 11;
        bArr[61] = 2;
        bArr[62] = 5;
        bArr[63] = 3;
        bArr[64] = 6;
        bArr[65] = 12;
        bArr[66] = 7;
        bArr[67] = 1;
        bArr[68] = 5;
        bArr[69] = 15;
        bArr[70] = 13;
        bArr[71] = 8;
        bArr[72] = 4;
        bArr[73] = 10;
        bArr[74] = 9;
        bArr[75] = 14;
        bArr[77] = 3;
        bArr[78] = 11;
        bArr[79] = 2;
        bArr[80] = 4;
        bArr[81] = 11;
        bArr[82] = 10;
        bArr[84] = 7;
        bArr[85] = 2;
        bArr[86] = 1;
        bArr[87] = 13;
        bArr[88] = 3;
        bArr[89] = 6;
        bArr[90] = 8;
        bArr[91] = 5;
        bArr[92] = 9;
        bArr[93] = 12;
        bArr[94] = 15;
        bArr[95] = 14;
        bArr[96] = 13;
        bArr[97] = 11;
        bArr[98] = 4;
        bArr[99] = 1;
        bArr[100] = 3;
        bArr[101] = 15;
        bArr[102] = 5;
        bArr[103] = 9;
        bArr[105] = 10;
        bArr[106] = 14;
        bArr[107] = 7;
        bArr[108] = 6;
        bArr[109] = 8;
        bArr[110] = 2;
        bArr[111] = 12;
        bArr[112] = 1;
        bArr[113] = 15;
        bArr[114] = 13;
        bArr[116] = 5;
        bArr[117] = 7;
        bArr[118] = 10;
        bArr[119] = 4;
        bArr[120] = 9;
        bArr[121] = 2;
        bArr[122] = 3;
        bArr[123] = 14;
        bArr[124] = 6;
        bArr[125] = 11;
        bArr[126] = 8;
        bArr[127] = 12;
        Sbox_Default = bArr;
        byte[] bArr2 = new byte[128];
        bArr2[0] = 4;
        bArr2[1] = 2;
        bArr2[2] = 15;
        bArr2[3] = 5;
        bArr2[4] = 9;
        bArr2[5] = 1;
        bArr2[7] = 8;
        bArr2[8] = 14;
        bArr2[9] = 3;
        bArr2[10] = 11;
        bArr2[11] = 12;
        bArr2[12] = 13;
        bArr2[13] = 7;
        bArr2[14] = 10;
        bArr2[15] = 6;
        bArr2[16] = 12;
        bArr2[17] = 9;
        bArr2[18] = 15;
        bArr2[19] = 14;
        bArr2[20] = 8;
        bArr2[21] = 1;
        bArr2[22] = 3;
        bArr2[23] = 10;
        bArr2[24] = 2;
        bArr2[25] = 7;
        bArr2[26] = 4;
        bArr2[27] = 13;
        bArr2[28] = 6;
        bArr2[30] = 11;
        bArr2[31] = 5;
        bArr2[32] = 13;
        bArr2[33] = 8;
        bArr2[34] = 14;
        bArr2[35] = 12;
        bArr2[36] = 7;
        bArr2[37] = 3;
        bArr2[38] = 9;
        bArr2[39] = 10;
        bArr2[40] = 1;
        bArr2[41] = 5;
        bArr2[42] = 2;
        bArr2[43] = 4;
        bArr2[44] = 6;
        bArr2[45] = 15;
        bArr2[47] = 11;
        bArr2[48] = 14;
        bArr2[49] = 9;
        bArr2[50] = 11;
        bArr2[51] = 2;
        bArr2[52] = 5;
        bArr2[53] = 15;
        bArr2[54] = 7;
        bArr2[55] = 1;
        bArr2[57] = 13;
        bArr2[58] = 12;
        bArr2[59] = 6;
        bArr2[60] = 10;
        bArr2[61] = 4;
        bArr2[62] = 3;
        bArr2[63] = 8;
        bArr2[64] = 3;
        bArr2[65] = 14;
        bArr2[66] = 5;
        bArr2[67] = 9;
        bArr2[68] = 6;
        bArr2[69] = 8;
        bArr2[71] = 13;
        bArr2[72] = 10;
        bArr2[73] = 11;
        bArr2[74] = 7;
        bArr2[75] = 12;
        bArr2[76] = 2;
        bArr2[77] = 1;
        bArr2[78] = 15;
        bArr2[79] = 4;
        bArr2[80] = 8;
        bArr2[81] = 15;
        bArr2[82] = 6;
        bArr2[83] = 11;
        bArr2[84] = 1;
        bArr2[85] = 9;
        bArr2[86] = 12;
        bArr2[87] = 5;
        bArr2[88] = 13;
        bArr2[89] = 3;
        bArr2[90] = 7;
        bArr2[91] = 10;
        bArr2[93] = 14;
        bArr2[94] = 2;
        bArr2[95] = 4;
        bArr2[96] = 9;
        bArr2[97] = 11;
        bArr2[98] = 12;
        bArr2[100] = 3;
        bArr2[101] = 6;
        bArr2[102] = 7;
        bArr2[103] = 5;
        bArr2[104] = 4;
        bArr2[105] = 8;
        bArr2[106] = 14;
        bArr2[107] = 15;
        bArr2[108] = 1;
        bArr2[109] = 10;
        bArr2[110] = 2;
        bArr2[111] = 13;
        bArr2[112] = 12;
        bArr2[113] = 6;
        bArr2[114] = 5;
        bArr2[115] = 2;
        bArr2[116] = 11;
        bArr2[118] = 9;
        bArr2[119] = 13;
        bArr2[120] = 3;
        bArr2[121] = 14;
        bArr2[122] = 7;
        bArr2[123] = 10;
        bArr2[124] = 15;
        bArr2[125] = 4;
        bArr2[126] = 1;
        bArr2[127] = 8;
        ESbox_Test = bArr2;
        byte[] bArr3 = new byte[128];
        bArr3[0] = 9;
        bArr3[1] = 6;
        bArr3[2] = 3;
        bArr3[3] = 2;
        bArr3[4] = 8;
        bArr3[5] = 11;
        bArr3[6] = 1;
        bArr3[7] = 7;
        bArr3[8] = 10;
        bArr3[9] = 4;
        bArr3[10] = 14;
        bArr3[11] = 15;
        bArr3[12] = 12;
        bArr3[14] = 13;
        bArr3[15] = 5;
        bArr3[16] = 3;
        bArr3[17] = 7;
        bArr3[18] = 14;
        bArr3[19] = 9;
        bArr3[20] = 8;
        bArr3[21] = 10;
        bArr3[22] = 15;
        bArr3[24] = 5;
        bArr3[25] = 2;
        bArr3[26] = 6;
        bArr3[27] = 12;
        bArr3[28] = 11;
        bArr3[29] = 4;
        bArr3[30] = 13;
        bArr3[31] = 1;
        bArr3[32] = 14;
        bArr3[33] = 4;
        bArr3[34] = 6;
        bArr3[35] = 2;
        bArr3[36] = 11;
        bArr3[37] = 3;
        bArr3[38] = 13;
        bArr3[39] = 8;
        bArr3[40] = 12;
        bArr3[41] = 15;
        bArr3[42] = 5;
        bArr3[43] = 10;
        bArr3[45] = 7;
        bArr3[46] = 1;
        bArr3[47] = 9;
        bArr3[48] = 14;
        bArr3[49] = 7;
        bArr3[50] = 10;
        bArr3[51] = 12;
        bArr3[52] = 13;
        bArr3[53] = 1;
        bArr3[54] = 3;
        bArr3[55] = 9;
        bArr3[57] = 2;
        bArr3[58] = 11;
        bArr3[59] = 4;
        bArr3[60] = 15;
        bArr3[61] = 8;
        bArr3[62] = 5;
        bArr3[63] = 6;
        bArr3[64] = 11;
        bArr3[65] = 5;
        bArr3[66] = 1;
        bArr3[67] = 9;
        bArr3[68] = 8;
        bArr3[69] = 13;
        bArr3[70] = 15;
        bArr3[72] = 14;
        bArr3[73] = 4;
        bArr3[74] = 2;
        bArr3[75] = 3;
        bArr3[76] = 12;
        bArr3[77] = 7;
        bArr3[78] = 10;
        bArr3[79] = 6;
        bArr3[80] = 3;
        bArr3[81] = 10;
        bArr3[82] = 13;
        bArr3[83] = 12;
        bArr3[84] = 1;
        bArr3[85] = 2;
        bArr3[87] = 11;
        bArr3[88] = 7;
        bArr3[89] = 5;
        bArr3[90] = 9;
        bArr3[91] = 4;
        bArr3[92] = 8;
        bArr3[93] = 15;
        bArr3[94] = 14;
        bArr3[95] = 6;
        bArr3[96] = 1;
        bArr3[97] = 13;
        bArr3[98] = 2;
        bArr3[99] = 9;
        bArr3[100] = 7;
        bArr3[101] = 10;
        bArr3[102] = 6;
        bArr3[104] = 8;
        bArr3[105] = 12;
        bArr3[106] = 4;
        bArr3[107] = 5;
        bArr3[108] = 15;
        bArr3[109] = 3;
        bArr3[110] = 11;
        bArr3[111] = 14;
        bArr3[112] = 11;
        bArr3[113] = 10;
        bArr3[114] = 15;
        bArr3[115] = 5;
        bArr3[117] = 12;
        bArr3[118] = 14;
        bArr3[119] = 8;
        bArr3[120] = 6;
        bArr3[121] = 2;
        bArr3[122] = 3;
        bArr3[123] = 9;
        bArr3[124] = 1;
        bArr3[125] = 7;
        bArr3[126] = 13;
        bArr3[127] = 4;
        ESbox_A = bArr3;
        byte[] bArr4 = new byte[128];
        bArr4[0] = 8;
        bArr4[1] = 4;
        bArr4[2] = 11;
        bArr4[3] = 1;
        bArr4[4] = 3;
        bArr4[5] = 5;
        bArr4[7] = 9;
        bArr4[8] = 2;
        bArr4[9] = 14;
        bArr4[10] = 10;
        bArr4[11] = 12;
        bArr4[12] = 13;
        bArr4[13] = 6;
        bArr4[14] = 7;
        bArr4[15] = 15;
        bArr4[17] = 1;
        bArr4[18] = 2;
        bArr4[19] = 10;
        bArr4[20] = 4;
        bArr4[21] = 13;
        bArr4[22] = 5;
        bArr4[23] = 12;
        bArr4[24] = 9;
        bArr4[25] = 7;
        bArr4[26] = 3;
        bArr4[27] = 15;
        bArr4[28] = 11;
        bArr4[29] = 8;
        bArr4[30] = 6;
        bArr4[31] = 14;
        bArr4[32] = 14;
        bArr4[33] = 12;
        bArr4[35] = 10;
        bArr4[36] = 9;
        bArr4[37] = 2;
        bArr4[38] = 13;
        bArr4[39] = 11;
        bArr4[40] = 7;
        bArr4[41] = 5;
        bArr4[42] = 8;
        bArr4[43] = 15;
        bArr4[44] = 3;
        bArr4[45] = 6;
        bArr4[46] = 1;
        bArr4[47] = 4;
        bArr4[48] = 7;
        bArr4[49] = 5;
        bArr4[51] = 13;
        bArr4[52] = 11;
        bArr4[53] = 6;
        bArr4[54] = 1;
        bArr4[55] = 2;
        bArr4[56] = 3;
        bArr4[57] = 10;
        bArr4[58] = 12;
        bArr4[59] = 15;
        bArr4[60] = 4;
        bArr4[61] = 14;
        bArr4[62] = 9;
        bArr4[63] = 8;
        bArr4[64] = 2;
        bArr4[65] = 7;
        bArr4[66] = 12;
        bArr4[67] = 15;
        bArr4[68] = 9;
        bArr4[69] = 5;
        bArr4[70] = 10;
        bArr4[71] = 11;
        bArr4[72] = 1;
        bArr4[73] = 4;
        bArr4[75] = 13;
        bArr4[76] = 6;
        bArr4[77] = 8;
        bArr4[78] = 14;
        bArr4[79] = 3;
        bArr4[80] = 8;
        bArr4[81] = 3;
        bArr4[82] = 2;
        bArr4[83] = 6;
        bArr4[84] = 4;
        bArr4[85] = 13;
        bArr4[86] = 14;
        bArr4[87] = 11;
        bArr4[88] = 12;
        bArr4[89] = 1;
        bArr4[90] = 7;
        bArr4[91] = 15;
        bArr4[92] = 10;
        bArr4[94] = 9;
        bArr4[95] = 5;
        bArr4[96] = 5;
        bArr4[97] = 2;
        bArr4[98] = 10;
        bArr4[99] = 11;
        bArr4[100] = 9;
        bArr4[101] = 1;
        bArr4[102] = 12;
        bArr4[103] = 3;
        bArr4[104] = 7;
        bArr4[105] = 4;
        bArr4[106] = 13;
        bArr4[108] = 6;
        bArr4[109] = 15;
        bArr4[110] = 8;
        bArr4[111] = 14;
        bArr4[113] = 4;
        bArr4[114] = 11;
        bArr4[115] = 14;
        bArr4[116] = 8;
        bArr4[117] = 3;
        bArr4[118] = 7;
        bArr4[119] = 1;
        bArr4[120] = 10;
        bArr4[121] = 2;
        bArr4[122] = 9;
        bArr4[123] = 6;
        bArr4[124] = 15;
        bArr4[125] = 13;
        bArr4[126] = 5;
        bArr4[127] = 12;
        ESbox_B = bArr4;
        byte[] bArr5 = new byte[128];
        bArr5[0] = 1;
        bArr5[1] = 11;
        bArr5[2] = 12;
        bArr5[3] = 2;
        bArr5[4] = 9;
        bArr5[5] = 13;
        bArr5[7] = 15;
        bArr5[8] = 4;
        bArr5[9] = 5;
        bArr5[10] = 8;
        bArr5[11] = 14;
        bArr5[12] = 10;
        bArr5[13] = 7;
        bArr5[14] = 6;
        bArr5[15] = 3;
        bArr5[17] = 1;
        bArr5[18] = 7;
        bArr5[19] = 13;
        bArr5[20] = 11;
        bArr5[21] = 4;
        bArr5[22] = 5;
        bArr5[23] = 2;
        bArr5[24] = 8;
        bArr5[25] = 14;
        bArr5[26] = 15;
        bArr5[27] = 12;
        bArr5[28] = 9;
        bArr5[29] = 10;
        bArr5[30] = 6;
        bArr5[31] = 3;
        bArr5[32] = 8;
        bArr5[33] = 2;
        bArr5[34] = 5;
        bArr5[36] = 4;
        bArr5[37] = 9;
        bArr5[38] = 15;
        bArr5[39] = 10;
        bArr5[40] = 3;
        bArr5[41] = 7;
        bArr5[42] = 12;
        bArr5[43] = 13;
        bArr5[44] = 6;
        bArr5[45] = 14;
        bArr5[46] = 1;
        bArr5[47] = 11;
        bArr5[48] = 3;
        bArr5[49] = 6;
        bArr5[51] = 1;
        bArr5[52] = 5;
        bArr5[53] = 13;
        bArr5[54] = 10;
        bArr5[55] = 8;
        bArr5[56] = 11;
        bArr5[57] = 2;
        bArr5[58] = 9;
        bArr5[59] = 7;
        bArr5[60] = 14;
        bArr5[61] = 15;
        bArr5[62] = 12;
        bArr5[63] = 4;
        bArr5[64] = 8;
        bArr5[65] = 13;
        bArr5[66] = 11;
        bArr5[68] = 4;
        bArr5[69] = 5;
        bArr5[70] = 1;
        bArr5[71] = 2;
        bArr5[72] = 9;
        bArr5[73] = 3;
        bArr5[74] = 12;
        bArr5[75] = 14;
        bArr5[76] = 6;
        bArr5[77] = 15;
        bArr5[78] = 10;
        bArr5[79] = 7;
        bArr5[80] = 12;
        bArr5[81] = 9;
        bArr5[82] = 11;
        bArr5[83] = 1;
        bArr5[84] = 8;
        bArr5[85] = 14;
        bArr5[86] = 2;
        bArr5[87] = 4;
        bArr5[88] = 7;
        bArr5[89] = 3;
        bArr5[90] = 6;
        bArr5[91] = 5;
        bArr5[92] = 10;
        bArr5[94] = 15;
        bArr5[95] = 13;
        bArr5[96] = 10;
        bArr5[97] = 9;
        bArr5[98] = 6;
        bArr5[99] = 8;
        bArr5[100] = 13;
        bArr5[101] = 14;
        bArr5[102] = 2;
        bArr5[104] = 15;
        bArr5[105] = 3;
        bArr5[106] = 5;
        bArr5[107] = 11;
        bArr5[108] = 4;
        bArr5[109] = 1;
        bArr5[110] = 12;
        bArr5[111] = 7;
        bArr5[112] = 7;
        bArr5[113] = 4;
        bArr5[115] = 5;
        bArr5[116] = 10;
        bArr5[117] = 2;
        bArr5[118] = 15;
        bArr5[119] = 14;
        bArr5[120] = 12;
        bArr5[121] = 6;
        bArr5[122] = 1;
        bArr5[123] = 11;
        bArr5[124] = 13;
        bArr5[125] = 9;
        bArr5[126] = 3;
        bArr5[127] = 8;
        ESbox_C = bArr5;
        byte[] bArr6 = new byte[128];
        bArr6[0] = 15;
        bArr6[1] = 12;
        bArr6[2] = 2;
        bArr6[3] = 10;
        bArr6[4] = 6;
        bArr6[5] = 4;
        bArr6[6] = 5;
        bArr6[8] = 7;
        bArr6[9] = 9;
        bArr6[10] = 14;
        bArr6[11] = 13;
        bArr6[12] = 1;
        bArr6[13] = 11;
        bArr6[14] = 8;
        bArr6[15] = 3;
        bArr6[16] = 11;
        bArr6[17] = 6;
        bArr6[18] = 3;
        bArr6[19] = 4;
        bArr6[20] = 12;
        bArr6[21] = 15;
        bArr6[22] = 14;
        bArr6[23] = 2;
        bArr6[24] = 7;
        bArr6[25] = 13;
        bArr6[26] = 8;
        bArr6[28] = 5;
        bArr6[29] = 10;
        bArr6[30] = 9;
        bArr6[31] = 1;
        bArr6[32] = 1;
        bArr6[33] = 12;
        bArr6[34] = 11;
        bArr6[36] = 15;
        bArr6[37] = 14;
        bArr6[38] = 6;
        bArr6[39] = 5;
        bArr6[40] = 10;
        bArr6[41] = 13;
        bArr6[42] = 4;
        bArr6[43] = 8;
        bArr6[44] = 9;
        bArr6[45] = 3;
        bArr6[46] = 7;
        bArr6[47] = 2;
        bArr6[48] = 1;
        bArr6[49] = 5;
        bArr6[50] = 14;
        bArr6[51] = 12;
        bArr6[52] = 10;
        bArr6[53] = 7;
        bArr6[55] = 13;
        bArr6[56] = 6;
        bArr6[57] = 2;
        bArr6[58] = 11;
        bArr6[59] = 4;
        bArr6[60] = 9;
        bArr6[61] = 3;
        bArr6[62] = 15;
        bArr6[63] = 8;
        bArr6[65] = 12;
        bArr6[66] = 8;
        bArr6[67] = 9;
        bArr6[68] = 13;
        bArr6[69] = 2;
        bArr6[70] = 10;
        bArr6[71] = 11;
        bArr6[72] = 7;
        bArr6[73] = 3;
        bArr6[74] = 6;
        bArr6[75] = 5;
        bArr6[76] = 4;
        bArr6[77] = 14;
        bArr6[78] = 15;
        bArr6[79] = 1;
        bArr6[80] = 8;
        bArr6[82] = 15;
        bArr6[83] = 3;
        bArr6[84] = 2;
        bArr6[85] = 5;
        bArr6[86] = 14;
        bArr6[87] = 11;
        bArr6[88] = 1;
        bArr6[89] = 10;
        bArr6[90] = 4;
        bArr6[91] = 7;
        bArr6[92] = 12;
        bArr6[93] = 9;
        bArr6[94] = 13;
        bArr6[95] = 6;
        bArr6[96] = 3;
        bArr6[98] = 6;
        bArr6[99] = 15;
        bArr6[100] = 1;
        bArr6[101] = 14;
        bArr6[102] = 9;
        bArr6[103] = 2;
        bArr6[104] = 13;
        bArr6[105] = 8;
        bArr6[106] = 12;
        bArr6[107] = 4;
        bArr6[108] = 11;
        bArr6[109] = 10;
        bArr6[110] = 5;
        bArr6[111] = 7;
        bArr6[112] = 1;
        bArr6[113] = 10;
        bArr6[114] = 6;
        bArr6[115] = 8;
        bArr6[116] = 15;
        bArr6[117] = 11;
        bArr6[119] = 4;
        bArr6[120] = 12;
        bArr6[121] = 3;
        bArr6[122] = 5;
        bArr6[123] = 9;
        bArr6[124] = 7;
        bArr6[125] = 13;
        bArr6[126] = 2;
        bArr6[127] = 14;
        ESbox_D = bArr6;
        byte[] bArr7 = new byte[128];
        bArr7[0] = 4;
        bArr7[1] = 10;
        bArr7[2] = 9;
        bArr7[3] = 2;
        bArr7[4] = 13;
        bArr7[5] = 8;
        bArr7[7] = 14;
        bArr7[8] = 6;
        bArr7[9] = 11;
        bArr7[10] = 1;
        bArr7[11] = 12;
        bArr7[12] = 7;
        bArr7[13] = 15;
        bArr7[14] = 5;
        bArr7[15] = 3;
        bArr7[16] = 14;
        bArr7[17] = 11;
        bArr7[18] = 4;
        bArr7[19] = 12;
        bArr7[20] = 6;
        bArr7[21] = 13;
        bArr7[22] = 15;
        bArr7[23] = 10;
        bArr7[24] = 2;
        bArr7[25] = 3;
        bArr7[26] = 8;
        bArr7[27] = 1;
        bArr7[29] = 7;
        bArr7[30] = 5;
        bArr7[31] = 9;
        bArr7[32] = 5;
        bArr7[33] = 8;
        bArr7[34] = 1;
        bArr7[35] = 13;
        bArr7[36] = 10;
        bArr7[37] = 3;
        bArr7[38] = 4;
        bArr7[39] = 2;
        bArr7[40] = 14;
        bArr7[41] = 15;
        bArr7[42] = 12;
        bArr7[43] = 7;
        bArr7[44] = 6;
        bArr7[46] = 9;
        bArr7[47] = 11;
        bArr7[48] = 7;
        bArr7[49] = 13;
        bArr7[50] = 10;
        bArr7[51] = 1;
        bArr7[53] = 8;
        bArr7[54] = 9;
        bArr7[55] = 15;
        bArr7[56] = 14;
        bArr7[57] = 4;
        bArr7[58] = 6;
        bArr7[59] = 12;
        bArr7[60] = 11;
        bArr7[61] = 2;
        bArr7[62] = 5;
        bArr7[63] = 3;
        bArr7[64] = 6;
        bArr7[65] = 12;
        bArr7[66] = 7;
        bArr7[67] = 1;
        bArr7[68] = 5;
        bArr7[69] = 15;
        bArr7[70] = 13;
        bArr7[71] = 8;
        bArr7[72] = 4;
        bArr7[73] = 10;
        bArr7[74] = 9;
        bArr7[75] = 14;
        bArr7[77] = 3;
        bArr7[78] = 11;
        bArr7[79] = 2;
        bArr7[80] = 4;
        bArr7[81] = 11;
        bArr7[82] = 10;
        bArr7[84] = 7;
        bArr7[85] = 2;
        bArr7[86] = 1;
        bArr7[87] = 13;
        bArr7[88] = 3;
        bArr7[89] = 6;
        bArr7[90] = 8;
        bArr7[91] = 5;
        bArr7[92] = 9;
        bArr7[93] = 12;
        bArr7[94] = 15;
        bArr7[95] = 14;
        bArr7[96] = 13;
        bArr7[97] = 11;
        bArr7[98] = 4;
        bArr7[99] = 1;
        bArr7[100] = 3;
        bArr7[101] = 15;
        bArr7[102] = 5;
        bArr7[103] = 9;
        bArr7[105] = 10;
        bArr7[106] = 14;
        bArr7[107] = 7;
        bArr7[108] = 6;
        bArr7[109] = 8;
        bArr7[110] = 2;
        bArr7[111] = 12;
        bArr7[112] = 1;
        bArr7[113] = 15;
        bArr7[114] = 13;
        bArr7[116] = 5;
        bArr7[117] = 7;
        bArr7[118] = 10;
        bArr7[119] = 4;
        bArr7[120] = 9;
        bArr7[121] = 2;
        bArr7[122] = 3;
        bArr7[123] = 14;
        bArr7[124] = 6;
        bArr7[125] = 11;
        bArr7[126] = 8;
        bArr7[127] = 12;
        DSbox_Test = bArr7;
        byte[] bArr8 = new byte[128];
        bArr8[0] = 10;
        bArr8[1] = 4;
        bArr8[2] = 5;
        bArr8[3] = 6;
        bArr8[4] = 8;
        bArr8[5] = 1;
        bArr8[6] = 3;
        bArr8[7] = 7;
        bArr8[8] = 13;
        bArr8[9] = 12;
        bArr8[10] = 14;
        bArr8[12] = 9;
        bArr8[13] = 2;
        bArr8[14] = 11;
        bArr8[15] = 15;
        bArr8[16] = 5;
        bArr8[17] = 15;
        bArr8[18] = 4;
        bArr8[20] = 2;
        bArr8[21] = 13;
        bArr8[22] = 11;
        bArr8[23] = 9;
        bArr8[24] = 1;
        bArr8[25] = 7;
        bArr8[26] = 6;
        bArr8[27] = 3;
        bArr8[28] = 12;
        bArr8[29] = 14;
        bArr8[30] = 10;
        bArr8[31] = 8;
        bArr8[32] = 7;
        bArr8[33] = 15;
        bArr8[34] = 12;
        bArr8[35] = 14;
        bArr8[36] = 9;
        bArr8[37] = 4;
        bArr8[38] = 1;
        bArr8[40] = 3;
        bArr8[41] = 11;
        bArr8[42] = 5;
        bArr8[43] = 2;
        bArr8[44] = 6;
        bArr8[45] = 10;
        bArr8[46] = 8;
        bArr8[47] = 13;
        bArr8[48] = 4;
        bArr8[49] = 10;
        bArr8[50] = 7;
        bArr8[51] = 12;
        bArr8[53] = 15;
        bArr8[54] = 2;
        bArr8[55] = 8;
        bArr8[56] = 14;
        bArr8[57] = 1;
        bArr8[58] = 6;
        bArr8[59] = 5;
        bArr8[60] = 13;
        bArr8[61] = 11;
        bArr8[62] = 9;
        bArr8[63] = 3;
        bArr8[64] = 7;
        bArr8[65] = 6;
        bArr8[66] = 4;
        bArr8[67] = 11;
        bArr8[68] = 9;
        bArr8[69] = 12;
        bArr8[70] = 2;
        bArr8[71] = 10;
        bArr8[72] = 1;
        bArr8[73] = 8;
        bArr8[75] = 14;
        bArr8[76] = 15;
        bArr8[77] = 13;
        bArr8[78] = 3;
        bArr8[79] = 5;
        bArr8[80] = 7;
        bArr8[81] = 6;
        bArr8[82] = 2;
        bArr8[83] = 4;
        bArr8[84] = 13;
        bArr8[85] = 9;
        bArr8[86] = 15;
        bArr8[88] = 10;
        bArr8[89] = 1;
        bArr8[90] = 5;
        bArr8[91] = 11;
        bArr8[92] = 8;
        bArr8[93] = 14;
        bArr8[94] = 12;
        bArr8[95] = 3;
        bArr8[96] = 13;
        bArr8[97] = 14;
        bArr8[98] = 4;
        bArr8[99] = 1;
        bArr8[100] = 7;
        bArr8[102] = 5;
        bArr8[103] = 10;
        bArr8[104] = 3;
        bArr8[105] = 12;
        bArr8[106] = 8;
        bArr8[107] = 15;
        bArr8[108] = 6;
        bArr8[109] = 2;
        bArr8[110] = 9;
        bArr8[111] = 11;
        bArr8[112] = 1;
        bArr8[113] = 3;
        bArr8[114] = 10;
        bArr8[115] = 9;
        bArr8[116] = 5;
        bArr8[117] = 11;
        bArr8[118] = 4;
        bArr8[119] = 15;
        bArr8[120] = 8;
        bArr8[121] = 6;
        bArr8[122] = 7;
        bArr8[123] = 14;
        bArr8[124] = 13;
        bArr8[126] = 2;
        bArr8[127] = 12;
        DSbox_A = bArr8;
        addSBox("Default", Sbox_Default);
        addSBox("E-TEST", ESbox_Test);
        addSBox("E-A", ESbox_A);
        addSBox("E-B", ESbox_B);
        addSBox("E-C", ESbox_C);
        addSBox("E-D", ESbox_D);
        addSBox("D-TEST", DSbox_Test);
        addSBox("D-A", DSbox_A);
    }

    private static void addSBox(String str, byte[] bArr) {
        sBoxes.put(Strings.toUpperCase(str), bArr);
    }

    public void init(boolean z, CipherParameters cipherParameters) {
        if (cipherParameters instanceof ParametersWithSBox) {
            ParametersWithSBox parametersWithSBox = (ParametersWithSBox) cipherParameters;
            byte[] sBox = parametersWithSBox.getSBox();
            if (sBox.length == Sbox_Default.length) {
                this.f6092S = Arrays.clone(sBox);
                if (parametersWithSBox.getParameters() != null) {
                    this.workingKey = generateWorkingKey(z, ((KeyParameter) parametersWithSBox.getParameters()).getKey());
                    return;
                }
                return;
            }
            throw new IllegalArgumentException("invalid S-box passed to GOST28147 init");
        } else if (cipherParameters instanceof KeyParameter) {
            this.workingKey = generateWorkingKey(z, ((KeyParameter) cipherParameters).getKey());
        } else if (cipherParameters != null) {
            throw new IllegalArgumentException("invalid parameter passed to GOST28147 init - " + cipherParameters.getClass().getName());
        }
    }

    public int processBlock(byte[] bArr, int i, byte[] bArr2, int i2) {
        int[] iArr = this.workingKey;
        if (iArr == null) {
            throw new IllegalStateException("GOST28147 engine not initialised");
        } else if (i + 8 > bArr.length) {
            throw new DataLengthException("input buffer too short");
        } else if (i2 + 8 <= bArr2.length) {
            GOST28147Func(iArr, bArr, i, bArr2, i2);
            return 8;
        } else {
            throw new DataLengthException("output buffer too short");
        }
    }

    private int[] generateWorkingKey(boolean z, byte[] bArr) {
        this.forEncryption = z;
        if (bArr.length == 32) {
            int[] iArr = new int[8];
            for (int i = 0; i != 8; i++) {
                iArr[i] = bytesToint(bArr, i * 4);
            }
            return iArr;
        }
        throw new IllegalArgumentException("Key length invalid. Key needs to be 32 byte - 256 bit!!!");
    }

    private int GOST28147_mainStep(int i, int i2) {
        int i3 = i2 + i;
        byte[] bArr = this.f6092S;
        int i4 = (bArr[((i3 >> 0) & 15) + 0] << 0) + (bArr[((i3 >> 4) & 15) + 16] << 4) + (bArr[((i3 >> 8) & 15) + 32] << 8) + (bArr[((i3 >> 12) & 15) + 48] << 12) + (bArr[((i3 >> 16) & 15) + 64] << 16) + (bArr[((i3 >> 20) & 15) + 80] << 20) + (bArr[((i3 >> 24) & 15) + 96] << Ascii.CAN) + (bArr[((i3 >> 28) & 15) + 112] << Ascii.f266FS);
        return (i4 << 11) | (i4 >>> 21);
    }

    private void GOST28147Func(int[] iArr, byte[] bArr, int i, byte[] bArr2, int i2) {
        int i3;
        int i4;
        int bytesToint = bytesToint(bArr, i);
        int bytesToint2 = bytesToint(bArr, i + 4);
        int i5 = 7;
        if (this.forEncryption) {
            int i6 = 0;
            while (i6 < 3) {
                int i7 = bytesToint2;
                int i8 = 0;
                while (i8 < 8) {
                    i8++;
                    int GOST28147_mainStep = i7 ^ GOST28147_mainStep(bytesToint, iArr[i8]);
                    i7 = bytesToint;
                    bytesToint = GOST28147_mainStep;
                }
                i6++;
                bytesToint2 = i7;
            }
            i3 = bytesToint2;
            i4 = bytesToint;
            while (i5 > 0) {
                i5--;
                int GOST28147_mainStep2 = i3 ^ GOST28147_mainStep(i4, iArr[i5]);
                i3 = i4;
                i4 = GOST28147_mainStep2;
            }
        } else {
            int i9 = bytesToint2;
            int i10 = 0;
            while (i10 < 8) {
                i10++;
                int i11 = bytesToint;
                bytesToint = i9 ^ GOST28147_mainStep(bytesToint, iArr[i10]);
                i9 = i11;
            }
            int i12 = bytesToint;
            int i13 = 0;
            while (i13 < 3) {
                int i14 = i3;
                int i15 = i4;
                int i16 = 7;
                while (i16 >= 0 && (i13 != 2 || i16 != 0)) {
                    i16--;
                    int GOST28147_mainStep3 = i14 ^ GOST28147_mainStep(i15, iArr[i16]);
                    i14 = i15;
                    i15 = GOST28147_mainStep3;
                }
                i13++;
                i12 = i15;
                i9 = i14;
            }
        }
        intTobytes(i4, bArr2, i2);
        intTobytes(GOST28147_mainStep(i4, iArr[0]) ^ i3, bArr2, i2 + 4);
    }

    private int bytesToint(byte[] bArr, int i) {
        return ((bArr[i + 3] << Ascii.CAN) & ViewCompat.MEASURED_STATE_MASK) + ((bArr[i + 2] << 16) & 16711680) + ((bArr[i + 1] << 8) & MotionEventCompat.ACTION_POINTER_INDEX_MASK) + (bArr[i] & 255);
    }

    private void intTobytes(int i, byte[] bArr, int i2) {
        bArr[i2 + 3] = (byte) (i >>> 24);
        bArr[i2 + 2] = (byte) (i >>> 16);
        bArr[i2 + 1] = (byte) (i >>> 8);
        bArr[i2] = (byte) i;
    }

    public static byte[] getSBox(String str) {
        byte[] bArr = (byte[]) sBoxes.get(Strings.toUpperCase(str));
        if (bArr != null) {
            return Arrays.clone(bArr);
        }
        throw new IllegalArgumentException("Unknown S-Box - possible types: \"Default\", \"E-Test\", \"E-A\", \"E-B\", \"E-C\", \"E-D\", \"D-Test\", \"D-A\".");
    }
}
