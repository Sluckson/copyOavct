package com.google.zxing.pdf417.encoder;

import androidx.core.app.FrameMetricsAggregator;
import androidx.recyclerview.widget.ItemTouchHelper;
import com.google.android.exoplayer2.extractor.p008ts.PsExtractor;
import com.google.android.exoplayer2.extractor.p008ts.TsExtractor;
import com.google.logging.type.LogSeverity;
import com.google.zxing.WriterException;
import com.google.zxing.pdf417.PDF417Common;
import com.lowagie.text.Jpeg;
import com.lowagie.text.pdf.codec.TIFFConstants;
import com.lowagie.text.pdf.codec.wmf.MetaDo;
import com.wowza.gocoder.sdk.api.configuration.WOWZMediaConfig;
import com.wowza.gocoder.sdk.support.wmstransport.wms.p042a.p044b.C4317c;
import com.wowza.gocoder.sdk.support.wse.jni.wmstransport.WMSTransport;
import p052cz.msebera.android.httpclient.HttpStatus;
import repack.org.bouncycastle.crypto.tls.CipherSuite;

final class PDF417ErrorCorrection {
    private static final int[][] EC_COEFFICIENTS = {new int[]{27, 917}, new int[]{MetaDo.META_SETTEXTJUSTIFICATION, 568, 723, 809}, new int[]{237, 308, 436, TIFFConstants.TIFFTAG_PLANARCONFIG, 646, 653, 428, 379}, new int[]{TIFFConstants.TIFFTAG_ORIENTATION, 562, 232, 755, 599, MetaDo.META_SETWINDOWEXT, 801, 132, MetaDo.META_RESTOREDC, 116, 442, 428, MetaDo.META_RESTOREDC, 42, 176, 65}, new int[]{361, 575, 922, MetaDo.META_SETVIEWPORTORG, 176, 586, WOWZMediaConfig.DEFAULT_VIDEO_FRAME_WIDTH, TIFFConstants.TIFFTAG_HALFTONEHINTS, 536, 742, 677, 742, 687, TIFFConstants.TIFFTAG_PLANARCONFIG, 193, TIFFConstants.TIFFTAG_JPEGLOSSLESSPREDICTORS, TIFFConstants.TIFFTAG_STRIPOFFSETS, 494, 263, CipherSuite.TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA, 593, LogSeverity.EMERGENCY_VALUE, 571, TIFFConstants.TIFFTAG_COLORMAP, 803, 133, 231, 390, 685, TIFFConstants.TIFFTAG_SUBIFD, 63, HttpStatus.SC_GONE}, new int[]{539, HttpStatus.SC_UNPROCESSABLE_ENTITY, 6, 93, 862, 771, 453, 106, 610, TIFFConstants.TIFFTAG_YPOSITION, 107, 505, 733, 877, 381, 612, 723, 476, 462, TsExtractor.TS_STREAM_TYPE_AC4, 430, 609, 858, 822, 543, 376, FrameMetricsAggregator.EVERY_DURATION, 400, 672, MetaDo.META_CREATEPENINDIRECT, TIFFConstants.TIFFTAG_YRESOLUTION, 184, 440, 35, TIFFConstants.TIFFTAG_JPEGQTABLES, 31, 460, 594, 225, 535, TIFFConstants.TIFFTAG_JPEGLOSSLESSPREDICTORS, 352, 605, 158, 651, 201, 488, HttpStatus.SC_BAD_GATEWAY, 648, 733, 717, 83, HttpStatus.SC_NOT_FOUND, 97, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 771, 840, 629, 4, 381, 843, 623, 264, 543}, new int[]{521, 310, 864, 547, 858, 580, TIFFConstants.TIFFTAG_RESOLUTIONUNIT, 379, 53, 779, 897, 444, 400, 925, 749, HttpStatus.SC_UNSUPPORTED_MEDIA_TYPE, 822, 93, 217, 208, PDF417Common.MAX_CODEWORDS_IN_BARCODE, C4317c.f4528X, 583, 620, 246, CipherSuite.TLS_RSA_PSK_WITH_AES_128_CBC_SHA, 447, 631, TIFFConstants.TIFFTAG_GROUP3OPTIONS, 908, 490, 704, 516, 258, 457, 907, 594, 723, 674, TIFFConstants.TIFFTAG_GROUP3OPTIONS, TIFFConstants.TIFFTAG_MODEL, 96, 684, 432, 686, 606, 860, 569, 193, 219, 129, 186, 236, TIFFConstants.TIFFTAG_YPOSITION, PsExtractor.AUDIO_STREAM, 775, TIFFConstants.TIFFTAG_ROWSPERSTRIP, 173, 40, 379, 712, 463, 646, 776, 171, 491, TIFFConstants.TIFFTAG_PAGENUMBER, MetaDo.META_CREATEFONTINDIRECT, 156, 732, 95, TIFFConstants.TIFFTAG_IMAGEDESCRIPTION, 447, 90, HttpStatus.SC_INSUFFICIENT_STORAGE, 48, 228, 821, 808, 898, 784, 663, 627, 378, 382, 262, 380, 602, 754, TIFFConstants.TIFFTAG_DOTRANGE, 89, 614, 87, 432, 670, 616, 157, 374, 242, 726, LogSeverity.CRITICAL_VALUE, TIFFConstants.TIFFTAG_DOCUMENTNAME, 375, 898, 845, 454, 354, TsExtractor.TS_STREAM_TYPE_HDMV_DTS, 814, 587, MetaDo.META_POLYGON, 34, 211, TIFFConstants.TIFFTAG_SUBIFD, 539, TIFFConstants.TIFFTAG_PAGENUMBER, 827, 865, 37, TIFFConstants.TIFFTAG_JPEGLOSSLESSPREDICTORS, 834, TIFFConstants.TIFFTAG_ARTIST, 550, 86, 801, 4, 108, 539}, new int[]{MetaDo.META_SETWINDOWEXT, 894, 75, 766, 882, 857, 74, HttpStatus.SC_NO_CONTENT, 82, 586, 708, ItemTouchHelper.Callback.DEFAULT_SWIPE_ANIMATION_DURATION, 905, 786, 138, 720, 858, 194, 311, 913, 275, 190, 375, 850, 438, 733, 194, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 201, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 828, 757, 710, 814, 919, 89, 68, 569, 11, HttpStatus.SC_NO_CONTENT, 796, 605, 540, 913, 801, LogSeverity.ALERT_VALUE, 799, 137, 439, 418, 592, 668, 353, 859, 370, 694, TIFFConstants.TIFFTAG_TILEBYTECOUNTS, PsExtractor.VIDEO_STREAM_MASK, 216, 257, TIFFConstants.TIFFTAG_PLANARCONFIG, 549, 209, 884, TIFFConstants.TIFFTAG_ARTIST, 70, 329, 793, 490, TIFFConstants.TIFFTAG_ORIENTATION, 877, 162, 749, 812, 684, 461, TIFFConstants.TIFFTAG_NUMBEROFINKS, 376, 849, 521, 307, TIFFConstants.TIFFTAG_GRAYRESPONSECURVE, 803, 712, 19, 358, 399, 908, 103, FrameMetricsAggregator.EVERY_DURATION, 51, 8, TIFFConstants.TIFFTAG_JPEGLOSSLESSPREDICTORS, 225, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 470, 637, 731, 66, 255, 917, TIFFConstants.TIFFTAG_DOCUMENTNAME, 463, 830, 730, 433, 848, 585, 136, 538, 906, 90, 2, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, 743, 199, 655, 903, 329, 49, 802, 580, 355, 588, 188, 462, 10, TsExtractor.TS_STREAM_TYPE_SPLICE_INFO, 628, TIFFConstants.TIFFTAG_COLORMAP, 479, TsExtractor.TS_STREAM_TYPE_HDMV_DTS, 739, 71, 263, TIFFConstants.TIFFTAG_WHITEPOINT, 374, 601, PsExtractor.AUDIO_STREAM, 605, CipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA, 673, 687, 234, 722, 384, 177, 752, 607, WOWZMediaConfig.DEFAULT_VIDEO_FRAME_WIDTH, 455, 193, 689, 707, MetaDo.META_POLYLINE, 641, 48, 60, 732, 621, 895, MetaDo.META_OFFSETCLIPRGN, MetaDo.META_SETRELABS, 852, 655, 309, 697, 755, 756, 60, 231, 773, 434, 421, 726, 528, HttpStatus.SC_SERVICE_UNAVAILABLE, 118, 49, 795, 32, CipherSuite.TLS_DHE_PSK_WITH_AES_128_CBC_SHA, 500, Jpeg.M_APPE, 836, 394, TIFFConstants.TIFFTAG_MINSAMPLEVALUE, 566, TIFFConstants.TIFFTAG_PRIMARYCHROMATICITIES, 9, 647, 550, 73, 914, 342, 126, 32, 681, 331, 792, 620, 60, 609, 441, 180, 791, 893, 754, 605, 383, 228, 749, 760, 213, 54, TIFFConstants.TIFFTAG_PAGENUMBER, TsExtractor.TS_STREAM_TYPE_SPLICE_INFO, 54, 834, 299, 922, 191, 910, 532, 609, 829, PsExtractor.PRIVATE_STREAM_1, 20, 167, 29, 872, 449, 83, 402, 41, 656, 505, 579, 481, 173, HttpStatus.SC_NOT_FOUND, 251, 688, 95, 497, 555, 642, 543, 307, 159, 924, 558, 648, 55, 497, 10}, new int[]{352, 77, 373, HttpStatus.SC_GATEWAY_TIMEOUT, 35, 599, 428, HttpStatus.SC_MULTI_STATUS, HttpStatus.SC_CONFLICT, 574, 118, 498, TIFFConstants.TIFFTAG_PAGENAME, 380, 350, 492, 197, TIFFConstants.TIFFTAG_CELLLENGTH, 920, 155, 914, 299, 229, 643, 294, 871, TIFFConstants.TIFFTAG_DATETIME, 88, 87, 193, 352, 781, 846, 75, TIFFConstants.TIFFTAG_CLEANFAXDATA, TIFFConstants.TIFFTAG_JPEGDCTABLES, 435, 543, 203, 666, 249, 346, 781, 621, WOWZMediaConfig.DEFAULT_VIDEO_FRAME_WIDTH, 268, 794, 534, 539, 781, HttpStatus.SC_REQUEST_TIMEOUT, 390, 644, 102, 476, 499, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, 632, 545, 37, 858, 916, MetaDo.META_FILLREGION, 41, 542, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 122, TIFFConstants.TIFFTAG_MODEL, 383, LogSeverity.EMERGENCY_VALUE, 485, 98, 752, 472, 761, 107, 784, 860, 658, 741, TIFFConstants.TIFFTAG_GRAYRESPONSEUNIT, HttpStatus.SC_NO_CONTENT, 681, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, 855, 85, 99, 62, 482, 180, 20, TIFFConstants.TIFFTAG_PAGENUMBER, 451, 593, 913, CipherSuite.TLS_DHE_PSK_WITH_RC4_128_SHA, 808, 684, TIFFConstants.TIFFTAG_YPOSITION, 536, MetaDo.META_SETMAPPERFLAGS, 76, 653, 899, 729, 567, 744, 390, 513, PsExtractor.AUDIO_STREAM, 516, 258, PsExtractor.VIDEO_STREAM_MASK, TIFFConstants.TIFFTAG_JPEGPOINTTRANSFORM, 794, 395, 768, 848, 51, 610, 384, 168, 190, 826, TIFFConstants.TIFFTAG_CONSECUTIVEBADFAXLINES, 596, 786, HttpStatus.SC_SEE_OTHER, 570, 381, HttpStatus.SC_UNSUPPORTED_MEDIA_TYPE, 641, 156, 237, 151, 429, 531, HttpStatus.SC_MULTI_STATUS, 676, 710, 89, 168, HttpStatus.SC_NOT_MODIFIED, 402, 40, 708, 575, 162, 864, 229, 65, 861, 841, 512, 164, 477, 221, 92, 358, 785, TIFFConstants.TIFFTAG_FREEOFFSETS, 357, 850, 836, 827, 736, 707, 94, 8, 494, 114, 521, 2, 499, 851, 543, 152, 729, 771, 95, 248, 361, 578, TIFFConstants.TIFFTAG_TILELENGTH, 856, 797, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 51, 684, 466, 533, 820, 669, 45, 902, 452, 167, 342, C4317c.f4528X, 173, 35, 463, 651, 51, 699, 591, 452, 578, 37, 124, MetaDo.META_INVERTREGION, TIFFConstants.TIFFTAG_INKSET, MetaDo.META_FILLREGION, 43, 427, 119, 662, 777, 475, 850, MetaDo.META_CREATEBRUSHINDIRECT, 364, 578, 911, TIFFConstants.TIFFTAG_YRESOLUTION, 711, 472, HttpStatus.SC_METHOD_FAILURE, 245, TIFFConstants.TIFFTAG_FREEOFFSETS, 594, 394, FrameMetricsAggregator.EVERY_DURATION, TIFFConstants.TIFFTAG_CLEANFAXDATA, 589, 777, 699, 688, 43, HttpStatus.SC_REQUEST_TIMEOUT, 842, 383, 721, 521, 560, 644, 714, 559, 62, CipherSuite.TLS_DHE_PSK_WITH_AES_256_CBC_SHA, 873, 663, 713, 159, 672, 729, 624, 59, 193, HttpStatus.SC_EXPECTATION_FAILED, 158, 209, 563, MetaDo.META_SELECTPALETTE, 343, 693, 109, 608, 563, 365, 181, 772, 677, 310, 248, 353, 708, HttpStatus.SC_GONE, 579, 870, 617, 841, 632, 860, TIFFConstants.TIFFTAG_FREEBYTECOUNTS, 536, 35, 777, 618, 586, HttpStatus.SC_FAILED_DEPENDENCY, 833, 77, 597, 346, TIFFConstants.TIFFTAG_DOCUMENTNAME, 757, 632, 695, 751, 331, MetaDo.META_CREATEPALETTE, 184, 45, 787, 680, 18, 66, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, 369, 54, 492, 228, 613, 830, 922, 437, TIFFConstants.TIFFTAG_JPEGQTABLES, 644, 905, 789, HttpStatus.SC_METHOD_FAILURE, 305, 441, HttpStatus.SC_MULTI_STATUS, 300, 892, 827, CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA, 537, 381, 662, 513, 56, 252, TIFFConstants.TIFFTAG_SMAXSAMPLEVALUE, 242, 797, 838, 837, 720, 224, 307, 631, 61, 87, 560, 310, 756, 665, 397, 808, 851, 309, 473, 795, 378, 31, 647, 915, 459, 806, 590, 731, 425, 216, 548, 249, TIFFConstants.TIFFTAG_HALFTONEHINTS, 881, 699, 535, 673, 782, WMSTransport.SESSIONSTATE_CONNECT_REDIRECT, 815, 905, HttpStatus.SC_SEE_OTHER, 843, 922, TIFFConstants.TIFFTAG_MAXSAMPLEVALUE, 73, 469, 791, 660, 162, 498, 308, 155, HttpStatus.SC_UNPROCESSABLE_ENTITY, 907, 817, 187, 62, 16, 425, 535, TIFFConstants.TIFFTAG_DOTRANGE, TIFFConstants.TIFFTAG_XPOSITION, 437, 375, TIFFConstants.TIFFTAG_STRIPOFFSETS, 610, TIFFConstants.TIFFTAG_RESOLUTIONUNIT, 183, 923, 116, 667, 751, 353, 62, 366, 691, 379, 687, 842, 37, 357, 720, 742, TIFFConstants.TIFFTAG_SUBIFD, 5, 39, 923, 311, HttpStatus.SC_FAILED_DEPENDENCY, 242, 749, TIFFConstants.TIFFTAG_HALFTONEHINTS, 54, 669, TIFFConstants.TIFFTAG_HOSTCOMPUTER, 342, 299, 534, 105, 667, 488, WOWZMediaConfig.DEFAULT_VIDEO_FRAME_WIDTH, 672, 576, 540, TIFFConstants.TIFFTAG_HOSTCOMPUTER, 486, 721, 610, 46, 656, 447, 171, 616, 464, 190, 531, TIFFConstants.TIFFTAG_PAGENUMBER, TIFFConstants.TIFFTAG_HALFTONEHINTS, MetaDo.META_CREATEPENINDIRECT, 752, 533, 175, TsExtractor.TS_STREAM_TYPE_SPLICE_INFO, 14, 381, 433, 717, 45, 111, 20, 596, TIFFConstants.TIFFTAG_PLANARCONFIG, 736, 138, 646, HttpStatus.SC_LENGTH_REQUIRED, 877, 669, CipherSuite.TLS_PSK_WITH_AES_256_CBC_SHA, 919, 45, 780, HttpStatus.SC_PROXY_AUTHENTICATION_REQUIRED, 164, TIFFConstants.TIFFTAG_INKSET, 899, 165, 726, LogSeverity.CRITICAL_VALUE, TIFFConstants.TIFFTAG_TILEBYTECOUNTS, 498, 655, 357, 752, 768, 223, 849, 647, 63, 310, 863, 251, 366, HttpStatus.SC_NOT_MODIFIED, TIFFConstants.TIFFTAG_XRESOLUTION, 738, 675, HttpStatus.SC_GONE, 389, C4317c.f4528X, 31, 121, HttpStatus.SC_SEE_OTHER, 263}};

    private PDF417ErrorCorrection() {
    }

    static int getErrorCorrectionCodewordCount(int i) {
        if (i >= 0 && i <= 8) {
            return 1 << (i + 1);
        }
        throw new IllegalArgumentException("Error correction level must be between 0 and 8!");
    }

    static int getRecommendedMinimumErrorCorrectionLevel(int i) throws WriterException {
        if (i <= 0) {
            throw new IllegalArgumentException("n must be > 0");
        } else if (i <= 40) {
            return 2;
        } else {
            if (i <= 160) {
                return 3;
            }
            if (i <= 320) {
                return 4;
            }
            if (i <= 863) {
                return 5;
            }
            throw new WriterException("No recommendation possible");
        }
    }

    static String generateErrorCorrection(CharSequence charSequence, int i) {
        int errorCorrectionCodewordCount = getErrorCorrectionCodewordCount(i);
        char[] cArr = new char[errorCorrectionCodewordCount];
        int length = charSequence.length();
        for (int i2 = 0; i2 < length; i2++) {
            int i3 = errorCorrectionCodewordCount - 1;
            int charAt = (charSequence.charAt(i2) + cArr[i3]) % PDF417Common.NUMBER_OF_CODEWORDS;
            while (i3 > 0) {
                cArr[i3] = (char) ((cArr[i3 - 1] + (929 - ((EC_COEFFICIENTS[i][i3] * charAt) % PDF417Common.NUMBER_OF_CODEWORDS))) % PDF417Common.NUMBER_OF_CODEWORDS);
                i3--;
            }
            cArr[0] = (char) ((929 - ((charAt * EC_COEFFICIENTS[i][0]) % PDF417Common.NUMBER_OF_CODEWORDS)) % PDF417Common.NUMBER_OF_CODEWORDS);
        }
        StringBuilder sb = new StringBuilder(errorCorrectionCodewordCount);
        for (int i4 = errorCorrectionCodewordCount - 1; i4 >= 0; i4--) {
            if (cArr[i4] != 0) {
                cArr[i4] = (char) (929 - cArr[i4]);
            }
            sb.append(cArr[i4]);
        }
        return sb.toString();
    }
}
